apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: trading-system
  labels:
    app: redis
    component: cache
spec:
  serviceName: redis-service
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      securityContext:
        runAsUser: 999
        fsGroup: 999

      containers:
      - name: redis
        image: redis:7-alpine
        imagePullPolicy: IfNotPresent

        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP

        command:
        - redis-server
        - --appendonly
        - "yes"
        - --appendfsync
        - "everysec"
        - --maxmemory
        - "1gb"
        - --maxmemory-policy
        - "allkeys-lru"

        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"

        volumeMounts:
        - name: redis-storage
          mountPath: /data

        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3

  volumeClaimTemplates:
  - metadata:
      name: redis-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
      storageClassName: standard
